{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "createVideoMaterial",
    "fullyQualifiedName": "utils.createVideoMaterial",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Content",
    "collectionId": "Content_utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  const courseContentArr = await createModuleContent.run({\n    title: inp_newVideoTitle.text\n  });\n  if (courseContentArr && courseContentArr.length > 0) {\n    await createVideoContent.run({\n      courseContentId: courseContentArr[0].id\n    });\n  }\n  closeModal('mdl_addContent');\n  showAlert('Content Created!', 'success');\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  const courseContentArr = await createModuleContent.run({\n    title: inp_newVideoTitle.text\n  });\n  if (courseContentArr && courseContentArr.length > 0) {\n    await createVideoContent.run({\n      courseContentId: courseContentArr[0].id\n    });\n  }\n  closeModal('mdl_addContent');\n  showAlert('Content Created!', 'success');\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Content_utils.createVideoMaterial",
  "deleted": false,
  "gitSyncId": "6461caf0d209002373fbd8c0_6482b076b9426707ed0e738d"
}